---
import { getLangFromUrl, useTranslations } from '../i18n/utils';
import { languages } from '../i18n/ui';

const lang = getLangFromUrl(Astro.url);
const t = useTranslations(lang);
const { title } = Astro.props.frontmatter || Astro.props;
const footerLangMenuAlert = t('footer.langMenuAlert');
const footerLangNeverMind = t('footer.neverMind');

---
<html lang={lang}>
  <head>
  <title>{title}</title>
  </head>
  <body>
    <nav>
		<ul>
			<li><a href="../">{t('nav.welcome')}</a></li>
			<li><a href={`../../${lang}/systemspecs`}>{t('nav.systemspecs')}</a></li>
			<li><a href={`../../${lang}/installation`}>{t('nav.installation')}</a></li>
			<li><a href={`../../${lang}/gettingconnected`}>{t('nav.gettingconnected')}</a></li>
			<li><a href={`../../${lang}/workingwithsessions`}>{t('nav.workingwithsessions')}</a></li>

			<li><a href={`../../${lang}/dashboard`}>{t('nav.dashboard')}</a></li>
			<li><a href={`../../${lang}/faq`}>{t('nav.faq')}</a></li>
			<li><a href={`../../${lang}/pricing`}>{t('nav.pricing')}</a></li>
			<li><a href={`../../${lang}/changelog`}>{t('nav.changelog')}</a></li>
		</ul>
	</nav>
<main>
		<h1>{title}</h1>
    <slot />
</main>
<footer>
	<button id="changeLang">{t('footer.langChange')}</button>
	<ul id="langMenu" style="display: none";>
	  {Object.entries(languages).map(([lang, label]) => (
		<li>
		  <a href={`/${lang}/`}>{label}</a>
		</li>
	  ))}
	</ul>
	
	<script>
	function ariaAlert(message) {
		const alertDiv = document.createElement('div');
		alertDiv.setAttribute('role', 'alert');
		alertDiv.textContent = message;
		alertDiv.style.position = 'absolute';
		alertDiv.style.left = '-9999px';
		document.body.appendChild(alertDiv);
		setTimeout(() => {
			document.body.removeChild(alertDiv);
		}, 1000);
	}
	const t = useTranslations(lang);
	const footerLangMenuAlert = t('footer.langMenuAlert');
const footerLangNeverMind = t('footer.neverMind');
	document.getElementById('changeLang').addEventListener('click', () => {
		const languageList = document.getElementById('langMenu');
		if (languageList.style.display === 'none') {
		  languageList.style.display = 'block';
		  ariaAlert(footerLangMenuAlert);
		} else {
		  languageList.style.display = 'none';
		  ariaAlert(footerLangNeverMind);
		}
	  });
	  </script>
</footer>
  </body>
</html>
<style is:global>
	:root {
		--accent: 124, 58, 237;
		--accent-gradient: linear-gradient(45deg, rgb(var(--accent)), #da62c4 30%, white 60%);
	}
	html {
		font-family: system-ui, sans-serif;
		background-color: #F6F6F6;
	}
	code {
		font-family: Menlo, Monaco, Lucida Console, Liberation Mono, DejaVu Sans Mono,
			Bitstream Vera Sans Mono, Courier New, monospace;
	}
</style>
